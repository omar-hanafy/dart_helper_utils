Hereâ€™s the plain text documentation optimized for AI agents:

# Plain Text Documentation for AI Agents
Generated: 2025-02-27
Source: /Users/omarhanafy/Development/MyProjects/dart_helper_utils/lib/src/extensions/num.dart

## num.dart
### num? Extensions (HTTP)
- isSuccessCode, isOkCode, isCreatedCode, isAcceptedCode, isNoContentCode, isClientErrorCode, isServerErrorCode, isRedirectionCode, isTemporaryRedirect, isPermanentRedirect, isAuthenticationError, isValidationError, isRateLimitError, isTimeoutError, isConflictError, isNotFoundError, isRetryableError(Output: bool)
- statusCodeRetryDelay(Output: Duration)
- toHttpStatusMessage, toHttpStatusUserMessage, toHttpStatusDevMessage(Output: String)
- isValidPhoneNumber(Output: bool)
### num? Extensions (General)
- tryToInt(Output: int?)
- tryToDouble(Output: double?)
- percentage(Input: num total, bool allowDecimals = true, Output: num)
- isNegative, isPositive, isZeroOrNull, asBool(Output: bool)
- toDecimalString(Input: int decimalPlaces, bool keepTrailingZeros = false, Output: String)
### num Extensions
- isPositive, isNegative, isZero(Output: bool)
- isValidPhoneNumber(Output: bool)
- numberOfDigits(Output: int)
- removeTrailingZero(Output: String)
- roundToFiftyOrHundred, roundToTenth, tenth, fourth, third, half(Output: double)
- getRandom(Output: int)
- random(Input: int? seed, Output: int)
- asGreeks(Input: int zerosFractionDigits = 0, int fractionDigits = 1, Output: String)
- daysDelay<T>, hoursDelay<T>, minutesDelay<T>, secondsDelay<T>, millisecondsDelay<T>(Input: FutureOr<T> Function()? computation, Output: Future<T>)
- asMilliseconds, asSeconds, asMinutes, asHours, asDays(Output: Duration)
- sqrt(Output: double)
- until(Input: int end, int step = 1, Output: Iterable<num>)
- safeDivide(Input: num b, num whenBothZero = 0, num whenDivByZero = double.infinity, bool returnNaNOnDivByZero = false, Output: double)
- roundToNearestMultiple, roundUpToMultiple, roundDownToMultiple(Input: num multiple, Output: num)
- isBetween(Input: num min, num max, bool inclusive = true, Output: bool)
- toPercent(Input: int fractionDigits = 2, Output: String)
- isApproximatelyEqual(Input: num other, double tolerance = 0.01, Output: bool)
- isCloseTo(Input: num other, num delta = 0.1, Output: bool)
- scaleBetween(Input: num min, num max, Output: num)
- toFractionString(Output: String)
- isInteger(Output: bool)
- toOrdinal(Input: bool asWord = false, bool includeAnd = false, Output: String)
### int Extensions
- inRangeOf(Input: int min, int max, Output: int)
- absolute, doubled, tripled, quadrupled, squared(Output: int)
- factorial(Output: int)
- gcd, lcm(Input: int other, Output: int)
- isPrime, isPerfectSquare, isPerfectCube, isFibonacci(Output: bool)
- isPowerOf(Input: int base, Output: bool)
- primeFactors(Output: List<int>)
- toRomanNumeral, toBinaryString, toHexString(Output: String)
- bitCount(Output: int)
- isDivisibleBy(Input: int divisor, Output: bool)
### double Extensions
- inRangeOf(Input: double min, double max, Output: double)
- absolute, doubled, tripled, quadrupled, squared(Output: double)
- roundToNearestMultiple, roundUpToMultiple, roundDownToMultiple(Input: double multiple, Output: double)
- toFractionString(Output: String)
### NumbersHelper Static Methods
- safeDivide(Input: num a, num b, num whenBothZero = 0, num whenDivByZero = double.infinity, bool returnNaNOnDivByZero = false, Output: double)
- mean, median, variance, standardDeviation(Input: List<num> values, Output: num)
- mode(Input: List<num> values, Output: List<num>)
- percentile(Input: List<num> values, double percentile, Output: num)
- gcd(Input: int a, int b, Output: int)
- isPerfectSquare(Input: int n, Output: bool)
- fromRomanNumeral(Input: String romanNumeral, Output: int)
### Iterable<num> Extensions
- mean, median, variance, standardDeviation(Output: num)
- mode(Output: List<num>)
- percentile(Input: double percentile, Output: num)
### Iterable<int> Extensions
- mean, median, variance, standardDeviation, percentile(Input: double percentile for percentile, Output: int)
- mode(Output: List<int>)
### Iterable<double> Extensions
- mean, median, variance, standardDeviation, percentile(Input: double percentile for percentile, Output: double)
- mode(Output: List<double>)
### Iterable<num?>? Extensions
- total(Output: num)
### Iterable<int?>? Extensions
- total(Output: int)
### Iterable<double?>? Extensions
- total(Output: double)
### Global Functions
- randomInRange(Input: num min, num max, int? seed, Output: int)
