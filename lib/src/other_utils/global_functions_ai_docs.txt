file: global_functions.dart
dependencies: import 'package:dart_helper_utils/dart_helper_utils.dart';

isValuePrimitive(dynamic value): (Function)
  Define: Checks if a value is a JSON-primitive type or a collection of JSON-primitive types.
  Parameters:
    value: (dynamic) - The value to check.
  Returns: (bool) - `true` if the value is a primitive or a collection of primitives, `false` otherwise.

isTypePrimitive<T>(): (Function)
  Define: Checks if a given type `T` is a JSON-primitive type (excluding collections).
  Returns: (bool) - true` if `T` is `num`, `int`, `double`, `bool`, `String`, `BigInt`, or `DateTime`; otherwise, `false`.
  Operational Notes:
    Uses a switch expression for type checking, which is efficient. Doesn't use external dependencies.

isEqual(dynamic a, dynamic b): (Function)
   Define: checks equality of the given params, considers Maps and lists.
   Returns: (bool)
   Parameters:
    a: (dynamic)
    b: (dynamic)

currentMillisecondsSinceEpoch: (Getter)
  Define: Returns the current time in milliseconds since the Unix epoch.
  Returns: (int) - Milliseconds since epoch.

now: (Getter)
  Define: Returns the current `DateTime`.
  Returns: (DateTime) - The current `DateTime`.
